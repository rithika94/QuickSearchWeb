@model QuickSearchWeb.Models.ExpenseViewModel

@{
    ViewBag.Title = "Add Expense Sheet";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Scripts{

    <link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/start/jquery-ui.css">
    <script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>
    <script>
         window.onload = function () {

            var date = $("#StartDate").val();
            var startDate = new Date(date.replace(/-/g, '\/'));
            var endDate = addDays(startDate, 6);
            setMinMaxDate();
            //UpdateExpenseSheetTotal();
        }

        //$("#EndDate").datepicker();
      

          $("#StartDate").datepicker({
            beforeShowDay:
            function(dt)
            {
                return [dt.getDay() == @ViewBag.TSStartDate ? true : false];
            }

        });

          $("#StartDate").on("change", function () {

              var date = $(this).val();
              var startDate = new Date(date.replace(/-/g, '\/'));
              var endDate = addDays(startDate, 6);
              document.getElementById("EndDate").value = endDate.getMonth() + 1 + "/" + endDate.getDate() + "/" + endDate.getFullYear();
              $("#ExpenseDate").datepicker('destroy');
              $("#ExpenseDate1").datepicker('destroy');
              setMinMaxDate();

          });



          function setMinMaxDate() {
              debugger;
              var val = $("#ExpenseDate").val();
              $("#ExpenseDate").datepicker({ minDate: $("#StartDate").val(), maxDate: $("#EndDate").val() });
              $("#ExpenseDate1").datepicker({ minDate: $("#StartDate").val(), maxDate: $("#EndDate").val() });
              var sd = new Date($("#StartDate").val());
              var ed = new Date($("#EndDate").val());

              var d = new Date(val);
              if (d > ed || d < sd)
              {
                  $("#ExpenseDate").val("");
              }
              
          }

        $("#Transport,#Lodging ,#Meals ,#Phone,#Other").on("keyup", function () {

            UpdateTotalExpense();
        });

        $("#Miles,#Multiply").on("keyup", function () {

            UpdateTotalMileExpense();
        });

        function addDays(startDate, numberOfDays) {
            var returnDate = new Date(
                startDate.getFullYear(),
                startDate.getMonth(),
                startDate.getDate() + numberOfDays,
                startDate.getHours(),
                startDate.getMinutes(),
                startDate.getSeconds());
            return returnDate;
        }

        $("#Advance").on("keyup", function () {

            UpdateExpenseSheetTotal();
        });

        function UpdateExpenseSheetTotal() {
            debugger;
            var subtotal = $("#SubTotal").val();
            var advance = $("#Advance").val();

            var total = +subtotal - Math.abs(advance);
            total = Math.round(total * 100) / 100;
            $("#ExpenseTotal").val(total);

        }


        function UpdateTotalExpense() {

            var val0 = $("#MilesDriven").val();
            var val1 = $("#Transport").val();
            var val2 = $("#Lodging").val();
            var val3 = $("#Meals").val();
            var val4 = $("#Phone").val();
            var val5 = $("#Other").val();
            var total = +val0 + +val1 + +val2 + +val3 + +val4 + +val5;
            total = Math.round(total * 1000) / 1000;
            $("#Total").val(total);

        }

        function UpdateTotalMileExpense() {
            debugger;
            var miles = $("#Miles").val();
            var multiply = $("#Multiply").val();
            var milesExpense = miles * multiply;
            milesExpense = Math.round(milesExpense * 1000) / 1000;
            $("#MilesDriven").val(milesExpense);
            UpdateTotalExpense();
        }


        function EditExpense(id) {
            debugger;
            var url = "/Expense/GetExpenseSummaryPartialView?id=" + id;

            $("#myModalBodyDiv").load(url, function () {
                $("#myModal").modal("show");

            })
        }


        function RemoveExpense(id) {

        $.ajax({
            url: "@Url.Action("RemoveExpenseSummary", "Expense")",
            data: { "id": id},
        async: false,
        DataType: 'json',
        type: "POST",
        success: function (data) {
            var result = JSON.parse(JSON.stringify(data));
            //alert('Table saved successfully.');
            alert(data);
            location.reload();
        },
        error: function () {
            alert(data);
        }
    });//end ajax
        //alert(imgnameid);
    }

        function funImageRemove(id,path,name,expenseId) {

        $.ajax({
            url: "@Url.Action("RemoveImg", "Expense")",
            data: { "imgid": id, "imgname": name, "expenseId": expenseId },
        async: false,
        DataType: 'json',
        type: "POST",
        success: function (data) {
            var result = JSON.parse(JSON.stringify(data));
            //alert('Table saved successfully.');
            alert(data);
            location.reload();
        },
        error: function () {
            alert(data);
        }
    });//end ajax
        alert(imgnameid);
    }


    function downloadImage(name, expenseId) {
        debugger;
        $.ajax({
            url: "@Url.Action("FileExists", "Expense")",
            data: { "imgname": name, "expenseId": expenseId },
        DataType: 'json',
        type: "POST",
        success: function (result) {
            debugger;
            if (result.isFileExists == true) {
                window.location = '/Expense/GetImage?imgname=' + name + '&expenseId=' + expenseId;
            } else {
                alert('File does not exists');
            }

        },

    });
   }

         //Set limit 5 to upload common documents
function validate(numberofFile)
{

    for (var i = 0; i < $("#FILEPhoto").get(0).files.length; ++i) {
        var file1 = $("#FILEPhoto").get(0).files[i].name;

        if (file1) {
            var file_size = $("#FILEPhoto").get(0).files[i].size;
            if (file_size < 5242880) {
                var ext = file1.split('.').pop().toLowerCase();
                if ($.inArray(ext, ['jpg', 'jpeg', 'png', 'pdf']) === -1) {
                    alert("Please upload only jpg, png, pdf files");
                    return false;

                }
            } else {
                alert("File size should be below 5MB.");
                return false;
            }
        }
    }
       var fi = document.getElementById('FILEPhoto');
        var initialFileSize=parseInt('@Model.ExpenseFilesList.Count()');
         var totalFileNo = initialFileSize;
        var fSize = 0;
        // VALIDATE OR CHECK IF ANY FILE IS SELECTED.
        if (fi.files.length > 0) {
            // RUN A LOOP TO CHECK EACH SELECTED FILE.
            for (var i = 0; i <= fi.files.length - 1; i++) {
                //fsize = fi.files.item(i).size;      // THE SIZE OF THE FILE.
                totalFileNo = totalFileNo + 1;
            }
           // totalFileSize = ((totalFileSize / 1024) / 1024);
          // alert(totalFileNo);
            if (totalFileNo <= numberofFile) {
                return true;
            }
            else {
                alert("Maximum number of 5 File documents Can be uploaded");
                return false;
            }
        }
        else {
            //alert("Please Select File for Upload");
            return false;
        }
         }

         function SubmitForm() {
            debugger;
            $(".loader").show();

            var myformdata = $("#myForm").serialize();

            $.ajax({

                type: "POST",
                url: "/Expense/UpdateExpenseSummary",
                data: myformdata,
                success: function () {
                    $("#loader").hide();
                    $("#myModal").modal("hide");

                    window.location.href = "/Expense/EmployeeAdminExpenseEdit?id=" +@Model.ExpenseId ;
                }

            })
        }

        
        

         $('#submitForm').bind("invalid-form.validate", function () {
             debugger;            
             $("#btnSave").prop('disabled', false);
             $("#btnSave2").prop('disabled', false);
         });

         $('#submitForm').submit(function () {
             debugger;           
             $("#btnSave").prop("disabled", true);
             $("#btnSave2").prop("disabled", true);
         });


    </script>



}

<style>
    .panel-body {
        padding-top: 0px !important;
        padding-bottom: 0px !important;
    }

    .table {
        margin-bottom: 0px !important;
    }
</style>

<div class="content-wrap">
    <div class="main">
        <div class="container-fluid">


            <div class="row">
                <div class="page-header">
                    <div class="page-title">
                        <div class="col-lg-4">

                            @{
                                if (ViewBag.TSRole == "TimeSheetAdmin")
                                {

                                    <input type="button" value="Back to Expense Sheets" class="btn btn-flat btn-default m-l-5" form="post" onclick="location.href='@Url.Action("EmployeeAdminExpensesList", "Expense")'" />


                                }
                                else if (ViewBag.TSRole == "TimeSheetReportingManager")
                                {
                                    <input type="button" value="Back to Expense Sheets" class="btn btn-flat btn-default m-l-5" form="post" onclick="location.href='@Url.Action("EmployeeRepoManExpensesList", "Expense")'" />

                                }
                                else if (ViewBag.TSRole == "TimeSheetManager")
                                {
                                    <input type="button" value="Back to Expense Sheets" class="btn btn-flat btn-default m-l-5" form="post" onclick="location.href='@Url.Action("EmployeeManagerExpensesList", "Expense")'" />

                                }
                                else
                                {
                                    <input type="button" value="Back to Expense Sheets" class="btn btn-flat btn-default m-l-5" form="post" onclick="location.href='@Url.Action("MyExpenseList", "Expense")'" />

                                }

                            }

                        </div>
                        <div class="col-lg-4">
                            <h4 class="text-center"><strong>Edit Expense Sheet</strong></h4>
                        </div>
                        <div class="col-lg-4">
                            <ol class="breadcrumb text-right">
                                <li>
                                    <a @*onclick="location.href='@Url.Action("MyExpenseList", "Expense")'"*@>Expenses List</a>
                                </li>
                                <li class="active">Edit Expense Sheet</li>
                            </ol>
                        </div>
                    </div>
                </div>
            </div><!-- /# row -->
            <div class="main-content">


                @if (ViewBag.error != null)
                {
                    <div class="alert alert-danger">
                        @ViewBag.error
                    </div>

                }

                @if (ViewBag.status != null)
                {
                    <div class="alert alert-success">
                        @ViewBag.status
                    </div>

                }

                <div class="row">
                    @Html.ValidationMessage("error", "", new { @class = "text-danger" })

                    @*<input type="button" value="Back to TimeSheets" class="btn btn-flat btn-default m-b-10 m-l-5" form="post" onclick="location.href='@Url.Action("MyTimeSheetsList", "TimeSheet")'" />*@

                    <div class="container-fluid">
                        <div class="main-content">
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="card alert">
                                        @*<div class="card-header">
                                                <h4>Create Time Sheet </h4>
                                            </div>*@
                                        <div class="card-body">
                                            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "submitForm" }))
    {
                                        @Html.AntiForgeryToken()


                                        <div class="row">

                                            <div class="row">

                                                @Html.HiddenFor(m => m.UserId)
                                                @Html.HiddenFor(m => m.ExpenseId)
                                                <div class="col-md-2">
                                                    @Html.LabelFor(m => m.ExpenseCode)
                                                    @Html.TextBoxFor(m => m.ExpenseCode, new { @class = "form-control", @readonly = "true" })

                                                </div>

                                                @Html.HiddenFor(m => m.AspNetUser.Firstname)

                                                @Html.HiddenFor(m => m.AspNetUser.LastName)


                                                <div class="col-md-2">
                                                    <label>Employee Code</label>
                                                    @Html.TextBoxFor(m => m.AspNetUser.EmployeeCode, new { @class = "form-control", @readonly = "true" })
                                                    @*<input class="form-control"
                id="EmployeeCode"
                name="StudentName"
                readonly="readonly"
                type="text"
                value="@Model.User.EmployeeCode" />*@
                                                </div>


                                                <div class=" col-md-3">
                                                    <label>Employee Name</label>
                                                    @*@Html.TextBoxFor(m => m.FullName, new { @class = "form-control", @readonly = "true" })*@
                                                    <input class="form-control"
                                                           id="FullName"
                                                           readonly="readonly"
                                                           type="text"
                                                           value="@Model.AspNetUser.Firstname @Model.AspNetUser.LastName" />

                                                </div>
                                                <div class="col-md-3">
                                                    @Html.LabelFor(m => m.ReportingManager)
                                                    @Html.TextBoxFor(m => m.ReportingManager, new { @class = "form-control", @readonly = "true" })
                                                </div>
                                                <div class="col-md-2">
                                                    @Html.LabelFor(m => m.LookupCodeMaster)
                                                    @Html.TextBoxFor(m => m.LookupCodeMaster.LookupCodeName, new { @class = "form-control", @readonly = "true" })

                                                </div>
                                                <div class="col-md-3">
                                                    @Html.LabelFor(m => m.StartDate)
                                                    <div class="input-group date">
                                                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span> </span>
                                                        @Html.TextBoxFor(m => m.StartDate, "{0:MM/dd/yyyy}", new { @class = "form-control", @id = "StartDate" })
                                                    </div>

                                                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                                                </div>
                                                <div class="col-md-3">
                                                    @Html.LabelFor(m => m.EndDate)
                                                    <div class="input-group date">
                                                        <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span> </span>
                                                        @Html.TextBoxFor(m => m.EndDate, "{0:MM/dd/yyyy}", new { @class = "form-control", @id = "EndDate", @readonly = "true" })
                                                    </div>

                                                    @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                                </div>
                                                @*<div class="col-md-3">
                @Html.LabelFor(m => m.Advance)
                @Html.TextBoxFor(m => m.Advance, new { @class = "form-control", @id = "Advance" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(m => m.Total)
                @Html.TextBoxFor(m => m.Total, new { @class = "form-control", @readonly = "true", @id = "ExpenseTotal" })
            </div>*@
                                            </div>
                                            <br />

                                            <div class="panel panel-default">
                                                <div class="panel-heading">
                                                    Add New Expense  <mark>
                                                        (Note:  For every mile of business travel driven will be calculated as per standard mileage rate for 2018 round to .55 cents.)
                                                    </mark>
                                                </div>
                                                <div class="panel-body">
                                                    <div class="row">
                                                        <div class="table-responsive2">
                                                            <table class="table table-striped table-bordered"  style="min-width:1080px">

                                                                <thead>
                                                                    <tr>
                                                                        <th>Date</th>
                                                                        <th>Description</th>
                                                                        <th colspan="3">Miles Driven</th>
                                                                        <th>Transport ($)</th>
                                                                        <th>Lodging ($)</th>
                                                                        <th>Meals ($)</th>
                                                                        <th>Phone/Fax ($)</th>
                                                                        <th>Other ($)</th>
                                                                        <th>Total ($)</th>
                                                                        <th>Actions</th>
                                                                    </tr>
                                                                    <tr>
                                                                        <th colspan="2"></th>
                                                                        <th>Miles (Mi)</th>
                                                                        <th>Standard Rate ($/Mi)</th>
                                                                        <th>Total ($)</th>
                                                                        <th colspan="7"></th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>

                                                                    @foreach (var item in Model.ExpensesSummaryList)
                            {
                                        <tr>
                                            @Html.HiddenFor(m => item.Id)
                                            <td>
                                                @Html.DisplayFor(m => item.Date, new { @class = "form-control" })

                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.Description, new { @class = "form-control" })
                                            </td>
                                            <td>

                                                @Html.DisplayFor(m => item.Miles, new { @class = "form-control" })
                                            </td>
                                            <td>

                                                @Html.DisplayFor(m => item.MilesMultiplicationFactor, new { @class = "form-control" })
                                            </td>
                                            <td>

                                                @Html.DisplayFor(m => item.MilesDriven, new { @class = "form-control" })
                                            </td>

                                            <td>
                                                @Html.DisplayFor(m => item.Transport, new { @class = "form-control" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.Lodging, new { @class = "form-control" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.Meals, new { @class = "form-control" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.Phone, new { @class = "form-control" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.Other, new { @class = "form-control" })
                                            </td>
                                            <td>
                                                @Html.DisplayFor(m => item.Total, new { @class = "form-control" })
                                            </td>
                                            <td>
                                                <button type="button" class="btn-warning btn-flat" href="javascript:void(0)" onclick="EditExpense('@item.Id');"> <i class="ti-pencil-alt"></i></button>

                                                <button type="button" class="btn-danger btn-flat" href="javascript:void(0)" onclick="RemoveExpense('@item.Id');"> <i class="ti-trash"></i></button>

                                            </td>

                                        </tr>
}

                                                                    <tr>


                                                                        <td>

                                                                            @Html.TextBoxFor(m => m.ExpensesSummary.Date, "{0:MM/dd/yyyy}", new { @class = "form-control", @id = "ExpenseDate" })

                                                                        </td>
                                                                        <td>
                                                                            @Html.TextAreaFor(m => m.ExpensesSummary.Description, new { @class = "form-control" })
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-car dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.Miles, new { @class = "form-control", @id = "Miles" })
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.MilesMultiplicationFactor, new { @class = "form-control", @id = "Multiply" })
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.MilesDriven, new { @class = "form-control", @readonly = "True", @id = "MilesDriven" })
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.Transport, new { @class = "form-control", @id = "Transport" })
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.Lodging, new { @class = "form-control", @id = "Lodging" })
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.Meals, new { @class = "form-control", @id = "Meals" })
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.Phone, new { @class = "form-control", @id = "Phone" })
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.Other, new { @class = "form-control", @id = "Other" })
                                                                            </div>
                                                                        </td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.ExpensesSummary.Total, new { @class = "form-control", @id = "Total", @readonly = "true" })
                                                                            </div>
                                                                        </td>
                                                                        <td>

                                                                            <button id="btnSave" type="button" class="btn-success btn-flat" data-toggle="modal" data-target="#submitModal"> <i class="ti-plus"></i></button>
                                                                            @*<input type="submit" name="action" value="Update & Add More Expenses" class="btn btn-flat btn-info m-b-10 m-l-5 pull-right" />*@

                                                                        </td>
                                                                    </tr>

                                                                    <tr>
                                                                        <td colspan="9"></td>
                                                                        <td>SubTotal</td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.SubTotal, new { @class = "form-control", @readonly = "true", @id = "SubTotal" })
                                                                            </div>
                                                                        </td>
                                                                        <td></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td colspan="9"></td>
                                                                        <td>Advance</td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.Advance, new { @class = "form-control", @id = "Advance" })
                                                                            </div>
                                                                        </td>
                                                                        <td></td>
                                                                    </tr>
                                                                    <tr>
                                                                        <td colspan="9"></td>
                                                                        <td>Total</td>
                                                                        <td>
                                                                            <div class="inner-addon left-addon">
                                                                                <i class="ti-money dollar"></i>
                                                                                @Html.TextBoxFor(m => m.Total, new { @class = "form-control", @readonly = "true", @id = "ExpenseTotal" })
                                                                            </div>
                                                                        </td>
                                                                        <td></td>
                                                                    </tr>
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>


                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.Date, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.Miles, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.MilesMultiplicationFactor, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.MilesDriven, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.Transport, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.Lodging, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.Meals, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.Phone, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.Other, "", new { @class = "text-danger" })
                                            @Html.ValidationMessageFor(m => m.ExpensesSummary.Total, "", new { @class = "text-danger" })


                                            <div class="form-group">
                                                @*<input type="submit" name="action" value="Save & change to pending" class="btn btn-flat btn-info m-b-10 m-l-5 pull-right" />*@
                                                @*<input type="submit" name="action" value="Submit" class="btn btn-flat btn-info m-b-10 m-l-5" onclick="location.href='@Url.Action("MyTimeSheetCreate", "TimeSheet", new { submit = true })" />*@
                                                @*<button type="button" value="Delete" class="btn btn-flat btn-danger m-b-10 m-l-5" onclick="location.href='@Url.Action("HardDeleteAdmin", "Expense" , new { id = Model.ExpenseId})'">Delete </button>*@

                                                @*<input type="reset" value="Clear" class="btn btn-flat btn-danger m-b-10 m-l-5" />*@
                                                <button type="button" value="Submit" class="btn btn-flat btn-info m-b-10 m-l-5  pull-right" data-toggle="modal" data-target="#submitModal" >Save</button>
                                                <button type="button" value="Submit" class="btn btn-flat btn-danger m-b-10 m-l-5  pull-left" data-toggle="modal" data-target="#deleteTS" >Delete</button>


                                            </div>



                                        </div>

                                        <div class="modal fade" id="myModal" role="dialog" aria-labelledby="expense" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" aria-label="close"><span class="fa fa-close" aria-hidden="true"></span></button>
                                                        <h4 class="modal-title custom_align" id="Heading">Edit Expense</h4>
                                                    </div>
                                                    <div class="modal-body" id="myModalBodyDiv">


                                                    </div>


                                                </div>

                                            </div>

                                        </div>

                                        <div class="modal fade" id="submitModal" tabindex="-1" role="dialog" aria-labelledby="submitModal" aria-hidden="true">
                                            <div class="modal-dialog modal-sm">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" aria-label="close"><span class="fa fa-close" aria-hidden="true"></span></button>
                                                        <h4 class="modal-title custom_align" id="Heading">Confirmation</h4>
                                                    </div>
                                                    <div class="modal-body">

                                                        @*<div class="alert alert-warning">*@
                                                        <span class="fa fa-exclamation-triangle"></span> Are you sure you want to save changes in expense sheet, this will change status to pending?
                                                        @*</div>*@

                                                    </div>
                                                    <div class="modal-footer ">
                                                        @*<input type="submit" name="action" value="Submit" class="btn btn-flat btn-info m-b-10 m-l-5 pull-right" />*@
                                                        <button id="btnSave2" type="submit" name="action" value="Submit" class="btn btn-success"><span class="fa fa-check"></span> Yes</button>
                                                        <button type="button" class="btn btn-danger" data-dismiss="modal"><span class="fa fa-close"></span> No</button>
                                                    </div>
                                                </div>
                                                <!-- /.modal-content -->
                                            </div>
                                            <!-- /.modal-dialog -->
                                        </div>

                                        <div class="modal fade" id="deleteTS" tabindex="-1" role="dialog" aria-labelledby="deleteTS" aria-hidden="true">
                                            <div class="modal-dialog modal-sm">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true" aria-label="close"><span class="fa fa-close" aria-hidden="true"></span></button>
                                                        <h4 class="modal-title custom_align" id="Heading"> Delete Expense Sheet</h4>
                                                    </div>
                                                    <div class="modal-body">

                                                        @*<div class="alert alert-warning">*@
                                                        <span class="fa fa-exclamation-triangle"></span> Are you sure you want to delete this expense sheet?
                                                        @*</div>*@

                                                    </div>
                                                    <div class="modal-footer ">

                                                        <button type="button" onclick="location.href= '@Url.Action("SoftDeleteAdmin", "Expense" , new { id = Model.ExpenseId})'" name="submit" class="btn btn-success" id="btnSubmit"><span class="fa fa-check"></span> Yes</button>
                                                        <button type="button" class="btn btn-danger" data-dismiss="modal"><span class="fa fa-close"></span> No</button>
                                                    </div>
                                                </div>
                                                <!-- /.modal-content -->
                                            </div>
                                            <!-- /.modal-dialog -->
                                        </div>

}

                                            @*@{Html.RenderAction("GetExpensesSummaries", new { expenseId = Model.ExpenseId });}*@

                                            <div class="panel panel-default">
                                                <div class="panel-heading"> Expense receipts</div>
                                                <div class="panel-body">
                                                    <div class="col-md-4">
                                                        <!--Common Document Upload-->
                                                        @using (Html.BeginForm("EditDocumentUpload", "Expense", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                                        <label for="selectFile" class="hidden">Choose File</label>
                                        <input type="file" name="FILEPhoto" id="FILEPhoto" multiple="multiple">
                                        @Html.HiddenFor(m => m.ExpenseId)
                                        <input type="submit" value="Upload" class="btn btn-primary" onclick="return validate(5);" />
}
                                                    </div>
                                                    <div class="col-md-8">
                                                        <div class="row">
                                                            <div class="bootstrap-data-table-panel">
                                                                @if (Model.ExpenseFilesList != null && Model.ExpenseFilesList.Count > 0)
                        {
                            string FileName = string.Empty;
                                        <table id="datatable-buttons" class="table table-striped table-bordered">
                                            <thead>
                                                <tr>
                                                    <th>Document Name</th>
                                                    @*<th>Upload New</th>*@
                                                    <th>Action</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var item in Model.ExpenseFilesList)
        {
                                        <tr>
                                            <td>@item.FileName</td>

                                            @*<td>
            @using (Html.BeginForm("SaveImge", "Recruitment", FormMethod.Post, new { @class = "form-horizontal form-label-left" }))
            {
                FileName = "flDocument" + @item.Id;
                <input type="file" name="@FileName" id="@FileName" />
                <button type="submit">Update</button>
            }
        </td>*@
                                            <td>
                                                <button type="button" class="pull-left btn-danger btn-flat" href="javascript:void(0)" onclick="funImageRemove('@item.Id','@item.FileServerPath','@item.FileName','@item.ExpenseId');"> <i class="ti-trash"></i></button>
                                                <button type="button" class="pull-left btn-warning btn-flat m-l-5" href="javascript:void(0)" onclick="downloadImage('@item.FileName','@item.ExpenseId');"> <i class="ti-download"></i></button>

                                                @*@using (Html.BeginForm("GetImage", "Expense", FormMethod.Get, new { @class = "form-horizontal form-label-left" }))
                {
                                                                                                <input type="hidden" name="imgname" value="@item.FileName" />
                                                                                                <input type="hidden" name="expenseId" value="@item.ExpenseId" />
                                                                                                <button type="submit" class="pull-right btn-warning btn-flat "><i class="ti-download"></i></button>
            }*@
                                                @*<button type="button" class="pull-left btn-warning btn-flat m-l-5" href="javascript:void(0)" onclick="downloadImage('@item.FileServerPath','@item.FileName','@item.SupportId');"> <i class="ti-download"></i></button>*@

                                            </td>
                                        </tr>
}
                                            </tbody>
                                        </table>
}
                                                            </div>
                                                        </div>

                                                    </div>

                                                </div>
                                            </div>


                                        </div>
                                    </div>
                                </div><!-- /# column -->
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



